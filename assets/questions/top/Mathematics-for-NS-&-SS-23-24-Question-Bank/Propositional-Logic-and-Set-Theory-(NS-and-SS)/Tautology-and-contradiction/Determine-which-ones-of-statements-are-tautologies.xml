<?xml version="1.0" encoding="UTF-8"?>
<quiz>
  <question type="stack">
    <name>
      <text>Determine which ones of statements are tautologies</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Determine which of the following statements are tautologies.</p>
<p>Recall that a compound proposition is a "tautology" if it is true regardless of the truth values of its component propositions, in this case, \(p, q\) and \(r\).</p>
<p><em>Hint: Consider forming a truth table for the statements.</em></p>
<p>[[input:ans1]] [[validation:ans1]]</p>
<p>[[feedback:prt1]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h3>Worked solution</h3>
<p>For each of the compound statements, we can construct a truth table.
<br>We do this below showing the intermediate steps which are used to build the full proposition.</p>

<br>

<p>For the statement, {@choices[1][3]@},</p>
<p style="margin-left: 30px">{@feedback[choices[1][1]][2]@}</p>

<br>

<p>For the statement, {@choices[2][3]@},</p>
<p style="margin-left: 30px">{@feedback[choices[2][1]][2]@}</p>

<br>

<p>For the statement, {@choices[3][3]@},</p>
<p style="margin-left: 30px">{@feedback[choices[3][1]][2]@}</p>

<br>

<p>For a statement to be a tautology, it must be true for <b>all</b> of the different permutations of truth values for the component propositions.

[[ if test="member(0,mcq_correct(choices))" ]]
<br>So we see that none of the statements given are tautologies.</p>

[[ elif test="length(mcq_correct(choices))=1" ]]
<br>So we see that the only statement which is a tautology is {@all_choices[mcq_correct(choices)[1]][3]@}.</p>

[[ elif test="is(length(mcq_correct(choices))=2)" ]]
<br>So we see that both the statements {@all_choices[mcq_correct(choices)[1]][3]@} and {@all_choices[mcq_correct(choices)[2]][3]@} are tautologies.</p>

[[ elif test="is(length(mcq_correct(choices))=3)" ]]
<br>So we see that all of the given statements are in fact tautologies.</p>

[[/ if ]]]]></text>
    </generalfeedback>
    <defaultgrade>1</defaultgrade>
    <penalty>0.1</penalty>
    <hidden>0</hidden>
    <idnumber/>
    <stackversion>
      <text>2023060500</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[/* Useful functions */

/* Displaying a long truth table, including intermediate parts */
ex_truth_table(var_list, prop_list) := block(
    [
        number_vars:length(var_list),
        truth_vals:[]
    ],
    
    for i: 0 thru 2^number_vars-1 step 1 do (
        truth_vals: append(
            truth_vals, 
            [reverse(makelist(evenp(floor(i/2^j)), j, 0, number_vars-1))]
        )
    ),
    
    for i: 1 thru 2^number_vars step 1 do (
        for prop in prop_list do block(
            set_val_truth: makelist(var_list[j]=truth_vals[i][j], j, 1, number_vars),
            truth_vals[i]: append(
                truth_vals[i],
                [ev(last(prop), set_val_truth)]
            )
        )
    ),
    
    table_data: append([append(var_list, makelist(prop_list[i][1], i, 1, length(prop_list)))], truth_vals),
    
    return(apply(table, table_data))
);

/* implies function which evaluates */
imply(p1, p2) := block((not p1) or (p1 and p2));

all_choices: [
[1, true, "\\((p \\Rightarrow q) \\lor (p \\Rightarrow \\neg q)\\)"],
[2, true, "\\((p \\land q) \\Rightarrow (\\neg r \\lor (p \\Rightarrow q))\\)"],
[3, false, "\\((p \\lor q) \\land (p \\lor r)\\)"],
[4, false, "\\(\\neg p \\land \\neg q\\)"],
[5, false, "\\((\\neg p \\land q) \\lor q\\)"],
[6, true, "\\((p \\land q) \\Rightarrow (p \\lor q)\\)"],
[7, true, "\\((p \\Rightarrow q) \\land (q \\Rightarrow r) \\Rightarrow (p \\Rightarrow r)\\)"],
[8, false, "\\((\\neg p \\land q) \\lor p\\)"],
[9, false, "\\(p \\lor (q \\land r)\\)"],
[10, false, "\\((p \\lor q) \\land (p \\lor r)\\)"]
];

choices: append(
sort(rand_selection(all_choices, 3)),
[[0, not (choices[1][2] or choices[2][2] or choices[3][2]), "None of the above"]]
);

feedback: [
[1, ex_truth_table([p, q], [
        [not q], 
        [p implies q, imply(p, q)], 
        [p implies not q, imply(p, not q)], 
        [(p implies q) nounor (p implies not q), imply(p, q) or imply(p, not q)]
    ])
],

[2, ex_truth_table([p, q, r], [
        [p nounand q, p and q], 
        [not r], 
        [p implies q, imply(p, q)], 
        [not r nounor (p implies q), (not r) or imply(p, q)], 
        [(p nounand q) implies (not r nounor (p implies q)), imply((p and q), (not r) or imply(p, q))]
    ])
],

[3, ex_truth_table([p, q, r], [
        [p nounor q, p or q], 
        [p nounor r, p or r], 
        [(p nounor q) nounand (p nounor r), (p or q) and (p or r)]
    ])
],

[4, ex_truth_table([p, q], [
        [not p],
        [not q],
        [(not p) nounand (not q), (not p) and (not q)]
    ])
],

[5, ex_truth_table([p, q], [
        [not p],
        [(not p) nounand q, (not p) and q],
        [((not p) nounand q) nounor q, ((not p) and q) or q]
    ])
],

[6, ex_truth_table([p, q], [
        [p nounand q, p and q],
        [p nounor q, p or q],
        [(p nounand q) implies (p nounor q), imply(p and q, p or q)]
    ])
],

[7, ex_truth_table([p, q, r], [
        [p implies q, imply(p,q)],
        [q implies r, imply(q,r)],
        [(p implies q) nounand (q implies r), imply(p,q) and imply(q,r)],
        [p implies r, imply(p,r)],
        [(p implies q) nounand (q implies r) implies (p implies r), imply(imply(p,q) and imply(q,r), imply(p,r))]
    ])
],

[8, ex_truth_table([p, q], [
        [not p],
        [(not p) nounand q, (not p) and q],
        [((not p) nounand q) nounor p, ((not p) and q) or p]
    ])
],

[9, ex_truth_table([p, q, r], [
        [q nounand r, q and r],
        [p nounor (q nounand r), p or (q and r)]
    ])
],

[10, ex_truth_table([p, q, r], [
        [p nounor q, p or q],
        [p nounor r, p or r],
        [(p nounor q) nounand (p nounor r), (p or q) and (p or r)]
    ])
]

];]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text/>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text><![CDATA[<p>Options are: 
<br>(a) {@choices[1][3]@}
<br>(b) {@choices[2][3]@}
<br>(c) {@choices[3][3]@}</p>

<p>Tautologies are: {@mcq_correct(choices)@}</p>]]></text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text/>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Correct answer, well done.]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Your answer is partially correct.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Incorrect answer.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed/>
    <input>
      <name>ans1</name>
      <type>checkbox</type>
      <tans>choices</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint/>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords/>
      <allowwords/>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options/>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text/>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>mcq_correct(choices)</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text/>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1016715851</deployedseed>
    <deployedseed>1162561484</deployedseed>
    <deployedseed>526472974</deployedseed>
    <deployedseed>2037777794</deployedseed>
    <deployedseed>752119772</deployedseed>
    <deployedseed>920673080</deployedseed>
    <deployedseed>1926296158</deployedseed>
    <deployedseed>108881010</deployedseed>
    <deployedseed>773979992</deployedseed>
    <deployedseed>1072174984</deployedseed>
    <deployedseed>1498440804</deployedseed>
    <deployedseed>1308956608</deployedseed>
    <deployedseed>908117977</deployedseed>
    <deployedseed>637617045</deployedseed>
    <deployedseed>917738664</deployedseed>
    <deployedseed>1888988669</deployedseed>
    <deployedseed>1107345223</deployedseed>
    <deployedseed>1360625588</deployedseed>
    <deployedseed>1175688126</deployedseed>
    <deployedseed>1480434432</deployedseed>
    <deployedseed>931969202</deployedseed>
    <deployedseed>1056786224</deployedseed>
    <deployedseed>1023641009</deployedseed>
    <deployedseed>2057261043</deployedseed>
    <deployedseed>783238546</deployedseed>
    <deployedseed>1007966079</deployedseed>
    <deployedseed>1437920411</deployedseed>
    <deployedseed>477384446</deployedseed>
    <deployedseed>1123683340</deployedseed>
    <deployedseed>788345785</deployedseed>
    <deployedseed>2026275768</deployedseed>
    <deployedseed>922424821</deployedseed>
    <deployedseed>1181082170</deployedseed>
    <deployedseed>1225301748</deployedseed>
    <deployedseed>893857480</deployedseed>
    <deployedseed>1392776774</deployedseed>
    <deployedseed>2079225762</deployedseed>
    <deployedseed>1570159493</deployedseed>
    <deployedseed>1032137112</deployedseed>
    <deployedseed>102717849</deployedseed>
    <deployedseed>506816013</deployedseed>
    <deployedseed>499026506</deployedseed>
    <deployedseed>712965611</deployedseed>
    <deployedseed>17785523</deployedseed>
    <deployedseed>656644740</deployedseed>
    <deployedseed>1430579735</deployedseed>
    <deployedseed>1669447987</deployedseed>
    <deployedseed>952136691</deployedseed>
    <deployedseed>1825187155</deployedseed>
    <deployedseed>484082131</deployedseed>
    <deployedseed>475758193</deployedseed>
    <deployedseed>1690959383</deployedseed>
    <deployedseed>26982084</deployedseed>
    <deployedseed>1028288638</deployedseed>
    <deployedseed>1366760888</deployedseed>
    <deployedseed>128873927</deployedseed>
    <deployedseed>1258689959</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <description/>
      <testinput>
        <name>ans1</name>
        <value>mcq_correct(choices)</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-1-T</expectedanswernote>
      </expected>
    </qtest>
  </question>
</quiz>
