<?xml version="1.0" encoding="UTF-8"?>
<quiz>
  <question type="stack">
    <name>
      <text>Identify the graph that corresponds to the given equation.</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>(a) Select the graph with the equation \(y = {@part_a_eq@}\)</p>

<table>
  <tr style="height:225px">
    <td style="width:60px; font-size:15px">
    \(\text{(i)}\)
    </td>
    <td style="width:250px">
    [[jsxgraph height="200px" width="200px"]]

    JXG.Options.text.useMathJax=true;
    var board = JXG.JSXGraph.initBoard(divid, {
      boundingBox:[-5,5,5,-5],
      showCopyright:false,
      showNavigation:false,
      keepaspectratio:true
    });

    var axisStyle = {
      fixed:true,
      strokeColor:"black",
      highlightStrokeColor:"black",
      ticks:{visible:false}
    };

    board.create("axis", [[0,0],[0,1]], axisStyle);
    board.create("axis", [[0,0],[1,0]], axisStyle);

    var f1 = board.jc.snippet('{#disp_order[1][1]#}', true, 'x', true);

    board.create("functiongraph", [f1,-5, 5], {
      fixed:true,
      highlight:false,
      strokeColor:"black",
      strokeWidth:2
    });

    [[/jsxgraph]]
    </td>
    <td style="width:60px; font-size:15px">
    \(\text{(ii)}\)
    </td>
    <td style="width:250px">
    [[jsxgraph height="200px" width="200px"]]

    JXG.Options.text.useMathJax=true;
    var board = JXG.JSXGraph.initBoard(divid, {
      boundingBox:[-5,5,5,-5],
      showCopyright:false,
      showNavigation:false,
      keepaspectratio:true
    });

    var axisStyle = {
      fixed:true,
      strokeColor:"black",
      highlightStrokeColor:"black",
      ticks:{visible:false}
    };

    board.create("axis", [[0,0],[0,1]], axisStyle);
    board.create("axis", [[0,0],[1,0]], axisStyle);

    var f2 = board.jc.snippet('{#disp_order[2][1]#}', true, 'x', true);

    board.create("functiongraph", [f2,-5, 5], {
      fixed:true,
      highlight:false,
      strokeColor:"black",
      strokeWidth:2
    });

    [[/jsxgraph]]
    </td>
    <td style="width:60px; font-size:15px">
    \(\text{(iii)}\)
    </td>
    <td style="width:250px">
    [[jsxgraph height="200px" width="200px"]]

    JXG.Options.text.useMathJax=true;
    var board = JXG.JSXGraph.initBoard(divid, {
      boundingBox:[-5,5,5,-5],
      showCopyright:false,
      showNavigation:false,
      keepaspectratio:true
    });

    var axisStyle = {
      fixed:true,
      strokeColor:"black",
      highlightStrokeColor:"black",
      ticks:{visible:false}
    };

    board.create("axis", [[0,0],[0,1]], axisStyle);
    board.create("axis", [[0,0],[1,0]], axisStyle);

    var f3 = board.jc.snippet('{#disp_order[3][1]#}', true, 'x', true);

    board.create("functiongraph", [f3,-5, 5], {
      fixed:true,
      highlight:false,
      strokeColor:"black",
      strokeWidth:2
    });

    [[/jsxgraph]]
    </td>
  </tr>
  <tr style="height:225px">
    <td style="width:60px">
    \(\text{(iv)}\)
    </td>
    <td style="width:220px">
    [[jsxgraph height="200px" width="200px"]]

    JXG.Options.text.useMathJax=true;
    var board = JXG.JSXGraph.initBoard(divid, {
      boundingBox:[-5,5,5,-5],
      showCopyright:false,
      showNavigation:false,
      keepaspectratio:true
    });

    var axisStyle = {
      fixed:true,
      strokeColor:"black",
      highlightStrokeColor:"black",
      ticks:{visible:false}
    };

    board.create("axis", [[0,0],[0,1]], axisStyle);
    board.create("axis", [[0,0],[1,0]], axisStyle);

    var f4 = board.jc.snippet('{#disp_order[4][1]#}', true, 'x', true);

    board.create("functiongraph", [f4,-5, 5], {
      fixed:true,
      highlight:false,
      strokeColor:"black",
      strokeWidth:2
    });

    [[/jsxgraph]]
    </td>
    <td style="width:60px">
    \(\text{(v)}\)
    </td>
    <td style="width:220px">
    [[jsxgraph height="200px" width="200px"]]

    JXG.Options.text.useMathJax=true;
    var board = JXG.JSXGraph.initBoard(divid, {
      boundingBox:[-5,5,5,-5],
      showCopyright:false,
      showNavigation:false,
      keepaspectratio:true
    });

    var axisStyle = {
      fixed:true,
      strokeColor:"black",
      highlightStrokeColor:"black",
      ticks:{visible:false}
    };

    board.create("axis", [[0,0],[0,1]], axisStyle);
    board.create("axis", [[0,0],[1,0]], axisStyle);

    var f5 = board.jc.snippet('{#disp_order[5][1]#}', true, 'x', true);

    board.create("functiongraph", [f5,-5, 5], {
      fixed:true,
      highlight:false,
      strokeColor:"black",
      strokeWidth:2
    });

    [[/jsxgraph]]
    </td>
    <td style="width:60px">
    \(\text{(vi)}\)
    </td>
    <td style="width:220px">
    [[jsxgraph height="200px" width="200px"]]

    JXG.Options.text.useMathJax=true;
    var board = JXG.JSXGraph.initBoard(divid, {
      boundingBox:[-5,5,5,-5],
      showCopyright:false,
      showNavigation:false,
      keepaspectratio:true
    });

    var axisStyle = {
      fixed:true,
      strokeColor:"black",
      highlightStrokeColor:"black",
      ticks:{visible:false}
    };

    board.create("axis", [[0,0],[0,1]], axisStyle);
    board.create("axis", [[0,0],[1,0]], axisStyle);

    var f6 = board.jc.snippet('{#disp_order[6][1]#}', true, 'x', true);

    board.create("functiongraph", [f6,-5, 5], {
      fixed:true,
      highlight:false,
      strokeColor:"black",
      strokeWidth:2
    });

    [[/jsxgraph]]
    </td>
  </tr>
</table>

<p>[[input:ans1]] [[validation:ans1]]</p>
<p>[[feedback:prt1]]</p>

<br>

<p>(b) In the graph below, the equation of the dashed red parabola is {@part_b_eq1@}.
<br> The red parabola has been translated to give the black parabola.
<br>Using this information, select the correct equation below for the black parabola.</p>

<br>

<p style="margin-left: 30px;">
[[jsxgraph height="400px" width="400px"]]

    JXG.Options.text.useMathJax=true;
    var board = JXG.JSXGraph.initBoard(divid, {
      boundingBox:[
        {#b2 + x_trans/2#} - 6, 
        {#c2 + y_trans/2#} + 6, 
        {#b2 + x_trans/2#} + 6, 
        {#c2 + y_trans/2#} - 6
      ],
      showCopyright:false,
      showNavigation:false,
      keepaspectratio:true,
      grid:true
    });

    var axisStyle = {
      fixed:true,
      strokeColor:"black",
      highlightStrokeColor:"black",
      ticks:{visible:false}
    };

    board.create("axis", [[0,0],[0,1]], axisStyle);
    board.create("axis", [[0,0],[1,0]], axisStyle);

    var funcStyle = {
      fixed:true,
      highlight:false,
      strokeColor:"red",
      strokeWidth:2,
      dash:2
    };

    var f7 = board.jc.snippet('{#rhs(part_b_eq1)#}', true, 'x', true);
    board.create("functiongraph", [f7,-10,10], funcStyle);
    
    funcStyle.strokeColor = "black";
    funcStyle.dash = 1;
    var f8 = board.jc.snippet('{#rhs(part_b_eq2)#}', true, 'x', true);
    board.create("functiongraph", [f8,-10,10], funcStyle);

[[/jsxgraph]]
</p>

<p>[[input:ans2]] [[validation:ans2]]</p>
<p>[[feedback:prt2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h3>Worked Solution</h3>

<p>(a) For the first part of the question, we identify three key characteristics of the polynomial given.</p>

<p style="margin-left: 30px">1. The polynomial is a <b>quartic</b>, of degree 4, so must have 3 turning points.
<br>This immediately excludes the two cubic equations as solutions.</p>

<p style="margin-left: 30px">2. The polynomial has a <b>{@if c1<0 then "negative" else "positive"@} \(y\)-intercept</b>, which we verify by calculating the value of \(y\) at \(x=0\).
<br>This means that the curve should cross the \(y\)-axis in the {@if c1<0 then "lower" else "upper"@} half-plane.</p>

<p style="margin-left: 30px">3. The polynomial has a <b>{@if a1<0 then "negative" else "positive"@} limit</b> as \(x \rightarrow \pm \inf\)., which we verify by considering the sign of the coefficient of the highest power term, \(x^4\).
<br>This means that the tails of the curve should therefore {@if a1<0 then "decrease" else "increase"@} away from the origin.</p>

<p>From these three observations, only one of the curves has the required characteristics to represent the equation \(y = {@part_a_eq@}\)
<br>The correct answer is therefore {@
    if disp_order[1][2] then m_ans1[1][3]
    else if disp_order[2][2] then m_ans1[2][3]
    else if disp_order[3][2] then m_ans1[3][3]
    else if disp_order[4][2] then m_ans1[4][3]
    else if disp_order[5][2] then m_ans1[5][3]
    else if disp_order[6][2] then m_ans1[6][3]
@}.</p>

<br>

<p>(b) In the second part of the question, we need to determine the translation which has been applied to transform from the red to the black parabola.
<br>The simplest way to do this is to consider how the turning point of the parabola has been shifted.</p>

<p>Counting the squares gives that the parabola has been translated by,</p>
<p style="margin-left: 30px" >\({@abs(x_trans)@}\) squares {@if x_trans>0 then "rightward" else "leftward"@}</p>
<p style="margin-left: 30px" >\({@abs(y_trans)@}\) squares {@if y_trans>0 then "upward" else "downward"@}</p>
<p>Or, by a vector of \( ({@x_trans@}, {@y_trans@}) \).</p>

<br>

<p>We may then write the formula for the black parabola, using the fact that the result of applying a translation \( (x_0, y_0) \) to a curve with equation \(y = f(x)\) is given by,</p>
<p style="margin-left: 30px">\(y - y_0= f(x - x_0)\)</p>

<p hidden>{@simp:false;@}</p>
<p>The equation for the black parabola is therefore given by,</p>
<p style="margin-left: 30px">\({@y - y_trans@} = {@a2*(x - x_trans)^2 - ev(2*a2*b2,simp)*(x - x_trans) + ev(a2*(b2^2) + c2,simp)@}\)</p>
<p style="margin-left: 30px">\(y = {@a2*(x - x_trans)^2 - ev(2*a2*b2,simp)*(x - x_trans) + ev(a2*(b2^2) + c2 + y_trans, simp)@}\)</p>
<p style="margin-left: 30px">\(y = {@rhs(part_b_eq2)@}\)</p>
<p hidden>{@simp:true;@}</p>]]></text>
    </generalfeedback>
    <defaultgrade>5</defaultgrade>
    <penalty>0.1</penalty>
    <hidden>0</hidden>
    <idnumber/>
    <stackversion>
      <text>2023060500</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[/* Part (a) - randomizing equation type and display order */

eq_type: rand(4)+1;
/* 1: +ve limits, +ve y-intercept
   2: +ve limits, -ve y-intercept
   3: -ve limits, +ve y-intercept
   4: -ve limits, -ve y-intercept */

disp_order: random_permutation([
  [(1/10)*x^4 - x^2 + 1, is(eq_type=1)],
  [(1/10)*x^4 - x^2 - 1, is(eq_type=2)],
  [-(1/10)*x^4 + x^2 + 1, is(eq_type=3)],
  [-(1/10)*x^4 + x^2 - 1, is(eq_type=4)],
  [(1/4)*x^3 - 2*x + 1, false],
  [-(1/4)*x^3 + 2*x - 1, false]
]);

m_ans1: [
  [disp_order[1][1], disp_order[1][2], "\\(\\text{(i)}\\)"],
  [disp_order[2][1], disp_order[2][2], "\\(\\text{(ii)}\\)"],
  [disp_order[3][1], disp_order[3][2], "\\(\\text{(iii)}\\)"],
  [disp_order[4][1], disp_order[4][2], "\\(\\text{(iv)}\\)"],
  [disp_order[5][1], disp_order[5][2], "\\(\\text{(v)}\\)"],
  [disp_order[6][1], disp_order[6][2], "\\(\\text{(vi)}\\)"]
];

t_ans1: mcq_correct(m_ans1)[1];

/* Part (a) - Generating equation */

a1: (if elementp(eq_type,{1,2}) then 1 else -1)*(rand(5)+1);
c1: (if elementp(eq_type,{1,3}) then 1 else -1)*(rand(5)+1);

b1: if eq_type = 1 then
    rand_with_step(ceiling(-2*sqrt(4*a1*c1)), floor(-sqrt(4*a1*c1)), 1)
  else if eq_type = 2 then
    rand_with_step(-3*a1, -a1, 1)
  else if eq_type = 3 then
    rand_with_step(-a1, -3*a1, 1)
  else if eq_type = 4 then
    rand_with_step(ceiling(sqrt(4*a1*c1)), floor(2*sqrt(4*a1*c1)), 1);

part_a_eq: a1*x^4 + b1*x^2 + c1;

/* Part (b) - randomizing start parabola */

a2: rand_with_prohib(-1,1,[0]);
b2: rand_with_prohib(-4,4,[0]);
c2: rand_with_prohib(-4,4,[0]);

part_b_eq1: y = expand(a2*(x - b2)^2 + c2);

/* Part (b) - randomizing translation (towards centre) */

trans_vec: random_permutation([(rand(4)+3), (rand(3)+1)])
x_trans: (if b2 < 0 then 1 else -1)*trans_vec[1];
y_trans: (if c2 < 0 then 1 else -1)*trans_vec[2];

part_b_eq2: y = expand(a2*(x - b2 - x_trans)^2 + c2 + y_trans);

/* Part (b) - randomizing order of solutions */

m_ans2: random_permutation([
  [part_b_eq2, true],
  [y = expand(a2*(x - b2 + x_trans)^2 + c2 + y_trans), false],
  [y = expand(a2*(x - b2 - x_trans)^2 + c2 - y_trans), false],
  [y = expand(a2*(x - b2 + x_trans)^2 + c2 - y_trans), false]
])]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text/>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text><![CDATA[<p>(a) {@part_a_eq@}</p>
<p>(b) Start equation: {@part_b_eq1@}
<br>End equation: {@part_b_eq2@}</p>]]></text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text/>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Correct answer, well done.]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Your answer is partially correct.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Incorrect answer.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed/>
    <input>
      <name>ans1</name>
      <type>radio</type>
      <tans>m_ans1</tans>
      <boxsize>10</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint/>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords/>
      <allowwords/>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options>latex</options>
    </input>
    <input>
      <name>ans2</name>
      <type>radio</type>
      <tans>m_ans2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint/>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords/>
      <allowwords/>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options/>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text><![CDATA[/* Node 1 - Check correct answer */

/* Node 2 - Check if answer is cubic equation */
node2_test: if ans1=(1/4)*x^3-2*x+1 or ans1=-(1/4)*x^3+2*x-1 then 1 else 0;

/* Node 3 - Check if answer has wrong y-intercept */

incorr_intercept: if c1 > 0 then 
    {(1/10)*x^4 - x^2 - 1, -(1/10)*x^4 + x^2 - 1}
  else if c1 < 0 then
    {(1/10)*x^4 - x^2 + 1, -(1/10)*x^4 + x^2 + 1};

node3_test: if elementp(ans1, incorr_intercept) then 1 else 0;

/* Node 4 - Check if answer has wrong limit behaviour */

incorr_limit: if a1 < 0 then 
    {(1/10)*x^4 - x^2 + 1, (1/10)*x^4 - x^2 - 1}
  else if a1 > 0 then
    {-(1/10)*x^4 + x^2 + 1, -(1/10)*x^4 + x^2 - 1};

node4_test: if elementp(ans1, incorr_limit) then 1 else 0;]]></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>t_ans1</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text/>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>node2_test</sans>
        <tans>1</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>The answer which you have given has the shape of a <b>cubic</b> polynomial, of degree 3.
<br>This can be identified by the fact that the curve has 2 turning points.</p>

<p>However, the equation given represents a <b>quartic</b> polynomial, of degree 4.
<br>The curve should therefore have 3 turning points.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>node3_test</sans>
        <tans>1</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>The answer which you have given has a <b>{@if c1<0 then "positive" else "negative"@} \(y\)-intercept</b>.
<br>This can be identified by the fact that the curve crosses the \(y\)-axis in the {@if c1<0 then "upper" else "lower"@} half-plane.</p>

<p>However, the equation given represents a curve with a <b>{@if c1<0 then "negative" else "positive"@} \(y\)-intercept</b>.
<br>This can be seen by checking the \(y\)-value of the curve at \(x=0\). In this case, we have \(y = {@c1@}\).
<br>The curve should therefore cross the \(y\)-axis in the {@if c1<0 then "lower" else "upper"@} half-plane.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>node4_test</sans>
        <tans>1</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[{@if node3_test=1 then "<br>" else ""@}

<p>The answer which you have given has a <b>{@if a1<0 then "positive" else "negative"@} limit</b> as \(x \rightarrow \pm \inf\).
<br>This can be identified by the fact that the tails of the curve {@if a1<0 then "increase" else "decrease"@} away from the origin.</p>

<p>However, the equation given represents a curve with a <b>{@if a1<0 then "negative" else "positive"@} limit</b> as \(x \rightarrow \pm \inf\).
<br>This can be seen by checking the sign of the coefficient of the highest power term, \(x^4\). In this case, we have \({@if a1<0 then a1<0 else a1>0@}\).
<br>The tails of the curve should therefore {@if a1<0 then "decrease" else "increase"@} away from the origin.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>/* Node 1 - Check correct answer */

/* Node 2 - Check whether transformed in wrong x-direction */

incorr_x_trans: {
    y = expand(a2*(x - b2 + x_trans)^2 + c2 + y_trans), 
    y = expand(a2*(x - b2 + x_trans)^2 + c2 - y_trans)
  };

node2_test: if elementp(ans2, incorr_x_trans) then 1 else 0;

/* Node 3 - Check whether transformed in wrong y-direction */

incorr_y_trans: {
    y = expand(a2*(x - b2 - x_trans)^2 + c2 - y_trans),
    y = expand(a2*(x - b2 + x_trans)^2 + c2 - y_trans)
  };

node3_test: if elementp(ans2, incorr_y_trans) then 1 else 0;</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>part_b_eq2</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text/>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>node2_test</sans>
        <tans>1</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt2-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>The equation which you have selected corresponds to a translation in the <b>{@if x_trans<0 then "positive" else "negative"@}</b> \(x\)-direction.
<br>However, in the graph, the red parabola has been translated {@if x_trans<0 then "leftwards" else "rightwards"@}, in the <b>{@if x_trans<0 then "negative" else "positive"@}</b> \(x\)-direction.
<br>Remember that the translation of a graph \(y = f(x)\) in the \(x\)-direction, by a vector \( (x_0, 0) \), is given by,</p> 

<p style="margin-left: 30px">\(y = f(x - x_0)\)</p>

<p hidden>{@simp: false;@}</p>
<p>In this case, the graph has been translated by \( ({@x_trans@}, {@y_trans@}) \).
<br>So, the result of the translation in the \(x\)-direction <b>only</b> is \(y = {@a2*(x - x_trans)^2 - ev(2*a2*b2,simp)*(x - x_trans) + ev(a2*(b2^2) + c2,simp)@}\).</p>
<p hidden>{@simp: true;@}</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt2-2-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>node3_test</sans>
        <tans>1</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-3-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[{@if node2_test=1 then "<br>" else ""@}

<p>The equation which you have selected corresponds to a translation in the <b>{@if y_trans<0 then "positive" else "negative"@}</b> \(y\)-direction.
<br>However, in the graph, the red parabola has been translated {@if y_trans<0 then "downwards" else "upwards"@}, in the <b>{@if y_trans<0 then "negative" else "positive"@}</b> \(x\)-direction.
<br>Remember that the translation of a graph \(y = f(x)\) in the \(y\)-direction, by a vector \( (0, y_0) \), is given by,</p>

<p style="margin-left: 30px">\(y - y_0 = f(x)\)</p>

<p hidden>{@simp: false;@}</p>
<p>In this case, the graph has been translated by \( ({@x_trans@}, {@y_trans@}) \).
<br>So, the result of the translation in the \(y\)-direction <b>only</b> is \({@y - y_trans = ev(expand(a2*(x - b2)^2 + c2), simp)@}\).</p>
<p hidden>{@simp: true;@}</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-3-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1962631295</deployedseed>
    <deployedseed>1109218150</deployedseed>
    <deployedseed>1031077491</deployedseed>
    <deployedseed>65043273</deployedseed>
    <deployedseed>930238107</deployedseed>
    <deployedseed>635492929</deployedseed>
    <deployedseed>2056365451</deployedseed>
    <deployedseed>900310536</deployedseed>
    <deployedseed>2053208296</deployedseed>
    <deployedseed>2115346038</deployedseed>
    <deployedseed>1209243096</deployedseed>
    <deployedseed>1184155612</deployedseed>
    <deployedseed>426714428</deployedseed>
    <deployedseed>1166108936</deployedseed>
    <deployedseed>1637936160</deployedseed>
    <deployedseed>2090931000</deployedseed>
    <deployedseed>2129190474</deployedseed>
    <deployedseed>1744295380</deployedseed>
    <deployedseed>1022855344</deployedseed>
    <deployedseed>919923837</deployedseed>
    <deployedseed>415058775</deployedseed>
    <deployedseed>2052735585</deployedseed>
    <deployedseed>754694844</deployedseed>
    <deployedseed>1643269001</deployedseed>
    <deployedseed>374032286</deployedseed>
    <deployedseed>2037371921</deployedseed>
    <deployedseed>378003151</deployedseed>
    <deployedseed>1180669832</deployedseed>
    <deployedseed>925862186</deployedseed>
    <deployedseed>646586480</deployedseed>
    <deployedseed>598854749</deployedseed>
    <deployedseed>1837194407</deployedseed>
    <deployedseed>2106063187</deployedseed>
    <deployedseed>628682423</deployedseed>
    <deployedseed>744074662</deployedseed>
    <deployedseed>2142276837</deployedseed>
    <deployedseed>696460982</deployedseed>
    <deployedseed>773081634</deployedseed>
    <deployedseed>103583069</deployedseed>
    <deployedseed>2114881545</deployedseed>
    <deployedseed>799391812</deployedseed>
    <deployedseed>1173200701</deployedseed>
    <deployedseed>358977678</deployedseed>
    <deployedseed>809956270</deployedseed>
    <deployedseed>1915397801</deployedseed>
    <deployedseed>785287974</deployedseed>
    <deployedseed>673968026</deployedseed>
    <deployedseed>314392599</deployedseed>
    <deployedseed>1557050162</deployedseed>
    <deployedseed>295587446</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <description/>
      <testinput>
        <name>ans1</name>
        <value>first(mcq_correct(m_ans1))</value>
      </testinput>
      <testinput>
        <name>ans2</name>
        <value>first(mcq_correct(m_ans2))</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-1-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt2</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt2-1-T</expectedanswernote>
      </expected>
    </qtest>
  </question>
</quiz>
