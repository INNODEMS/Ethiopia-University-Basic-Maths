<?xml version="1.0" encoding="UTF-8"?>
<quiz>
  <question type="stack">
    <name>
      <text>Relations Cartesian Products</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>(a) Consider the two sets \(A={@set_A@}\) and \(B={@set_B@}\). 
<br>Find the Cartesian product \(A \times B\).
<br><em>Note: To enter a set, write the elements inside “curly braces”, like <code>{1, 2, 3, …}</code>. 
<br>The elements of your set will be coordinates contained in <b>square brackets</b>, so your answer should have the form <code>{[x1, y1], [x2, y2], ...}</code></em>

<p>[[input:ans1]]</p>
<p>[[validation:ans1]]</p>
<p>[[feedback:prt1]]</p>

<br>

<p>(b) Now, consider the two sets \(C={@set_C@}\) and \(D={@set_D@}\).
<br>Determine the number of elements in the Cartesian product \(C \times D\).

<p>[[input:ans2]] [[validation:ans2]]</p>
<p>[[feedback:prt2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h3>Worked Solution</h3>

<p>For two non-empty sets \( A = \{ a_i : 1 \leq i \leq m \} \) and \( B = \{ b_j : 1 \leq j \leq n \} \), the "Cartesian product", \(A \times B\), is the set of all ordered pairs of elements from \(A\) and \(B\).</p>

<p style="margin-left: 30px">\( A \times B = \{ [a_i, b_j] : 1 \leq i \leq m, 1 \leq j \leq n \} \)</p>

<br>

<p> (a) For the sets \(A\) and \(B\) given in the question,</p>
<p style="margin-left: 30px">\(A \times B = {@t_ans1@}\)</p>

<br>

<p> (b) We will write \(n(X)\) to denote the number of elements in the set \(X\).
<br>Then, we can use the fact that \(n(C \times D) = n(C) \cdot n(D) \).</p>

<p>We can visualize why this is true using a table with the individual elements of each of \(C\) and \(D\) determining the rows and columns respectively.</p>

<br>

<table style="border: 1px solid black; border-collapse: collapse; text-align: center; margin-left: 30px;">
    <tr style="height: 40px;">
        <td style="width: 80px; border: 1px solid gray;"></td>
        <td style="width: 80px; border: 1px solid gray;">\(c_1\)</td>
        <td style="width: 80px; border: 1px solid gray;">\(c_2\)</td>
        <td style="width: 80px; border: 1px solid gray">\(...\)</td>
        <td style="width: 80px; border: 1px solid gray;">\(c_m\)</td>
    </tr>
    <tr style="height: 40px;">
        <td style="border: 1px solid gray;">\(d_1\)</td>
        <td style="border: 1px solid gray">\([c_1, d_1]\)</td>
        <td style="border: 1px solid gray">\([c_2, d_1]\)</td>
        <td style="border: 1px solid gray">\(...\)</td>
        <td style="border: 1px solid gray">\([c_m, d_1]\)</td>
    </tr>
    <tr style="height: 40px;">
        <td style="border: 1px solid gray">\(d_2\)</td>
        <td style="border: 1px solid gray">\([c_1, d_2]\)</td>
        <td style="border: 1px solid gray">\([c_2, d_2]\)</td>
        <td style="border: 1px solid gray">\(...\)</td>
        <td style="border: 1px solid gray">\([c_m, d_2]\)</td>
    </tr>
    <tr style="height: 40px;">
        <td style="border: 1px solid gray">\(...\)</td>
        <td style="border: 1px solid gray">\(...\)</td>
        <td style="border: 1px solid gray">\(...\)</td>
        <td style="border: 1px solid gray"></td>
        <td style="border: 1px solid gray">\(...\)</td>
    </tr>
    <tr style="height: 40px;">
        <td style="border: 1px solid gray">\(d_n\)</td>
        <td style="border: 1px solid gray">\([c_1,d_n]\)</td>
        <td style="border: 1px solid gray">\([c_2,d_n]\)</td>
        <td style="border: 1px solid gray">\(...\)</td>
        <td style="border: 1px solid gray">\([c_m,d_n]\)</td>
    </tr>
</table>

<br>

<p>The elements of \(C \times D\) are the entries in the table, of which there are \(m \cdot n\).</p>

<p>The set \(C\) has \({@len_C@} \) elements and the set \(D\) has \({@len_D@} \) elements.
<br>Therefore, \(C  \times D\) will have \({@len_C@} \cdot {@len_D@} = {@t_ans2@}\) elements.</p>]]></text>
    </generalfeedback>
    <defaultgrade>1</defaultgrade>
    <penalty>0.1</penalty>
    <hidden>0</hidden>
    <idnumber/>
    <stackversion>
      <text>2023060500</text>
    </stackversion>
    <questionvariables>
      <text>/* Defining the sets for part (a) */

shared_entry: rand(10)
set_A: setify(random_permutation({shared_entry, rand(10), rand(10)*x}));
set_B: setify(random_permutation({shared_entry, rand(10), rand(10)*y}));

t_ans1: cartesian_product(set_A, set_B);

/* Defining the sets for part (b) */

len_C: rand(5)+2;
len_D: rand(5)+2;

set_C: setify(rand_selection({rand(10), rand(10)+10, rand(10)+20, rand(10)*x, rand(10)*y, rand(10)*z}, len_C));
set_D: setify(rand_selection({rand(10), rand(10)+10, rand(10)+20, rand(10)*x, rand(10)*y, rand(10)*z}, len_D));

t_ans2: len_C*len_D;

/* Part (a) - Answer-independent mistakes */
union_AB: union(set_A, set_B);
intersection_AB: intersection(set_A, set_B);
prod_BA: cartesian_product(set_B, set_A);

/* Part (b) - Answer-independent mistakes (often the same result but not always) */
len_union_CD: cardinality(union(set_C, set_D));
sum_len_CD: len_C + len_D;</text>
    </questionvariables>
    <specificfeedback format="html">
      <text/>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text><![CDATA[<p>(a) \(A={@set_A@}\) and \(B={@set_B@}\)
<br> \(A \times B = {@t_ans1@}\)</p>

<p>(b) \(C={@set_C@}\) and \(D={@set_D@}\)
<br> \(n(C \times D) = {@t_ans2@}\)</p>]]></text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text/>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Correct answer, well done.]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Your answer is partially correct.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Incorrect answer.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>(</matrixparens>
    <variantsselectionseed/>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>t_ans1</tans>
      <boxsize>30</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>1</insertstars>
      <syntaxhint/>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords/>
      <allowwords/>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options/>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>t_ans2</tans>
      <boxsize>8</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint/>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords/>
      <allowwords/>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options/>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text><![CDATA[/* Node 1 - Checks for correct answer*/
/* Node 2 - Gives union of sets */
/* Node 3 - Gives intersection of sets */
/* Node 4 - Gives B x A */

/* Node 5 - Tell students which elements they have included are incorrect */

incorr_entries: setdifference(ans1, t_ans1);
node5_test: if cardinality(incorr_entries) > 0 then 1 else 0;

incorr_entries_list: rest(listify(incorr_entries),-1);
incorr_entries_str: "";

if cardinality(incorr_entries) > 1 then (
    incorr_entries_str: string(pop(incorr_entries_list)),
    for i in incorr_entries_list do (
        incorr_entries_str: sconcat(incorr_entries_str, ", ", i)
    )
);

/* Node 6 - Tell students which elements they are missing */
missing_entries: setdifference(t_ans1, ans1);
node6_test: if cardinality(missing_entries) > 0 then 1 else 0;

missing_entries_list: rest(listify(missing_entries),-1);
missing_entries_str: "";

if cardinality(missing_entries) > 1 then (
    missing_entries_str: string(pop(missing_entries_list)),
    for i in missing_entries_list do (
        missing_entries_str: sconcat(missing_entries_str, ", ", i)
    )
);]]></text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>t_ans1</tans>
        <testoptions/>
        <quiet>1</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text/>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>union_AB</tans>
        <testoptions/>
        <quiet>1</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>You have given the <b>union</b> of the two sets \(A\) and \(B\).
<br>The <b>Cartesian product</b> of two sets is the set of pairs of elements, the first from set \(A\) and the second from set \(B\).</p>

<p>Formally, for two non-empty sets \( A = \{ a_i : 1 \leq i \leq m \} \) and \( B = \{ b_j : 1 \leq j \leq n \} \), the "Cartesian product", \(A \times B\), is the set of all ordered pairs of elements from \(A\) and \(B\).</p>
<p style="margin-left: 30px">\( A \times B = \{ [a_i, b_j] : 1 \leq i \leq m, 1 \leq j \leq n \} \)</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>intersection_AB</tans>
        <testoptions/>
        <quiet>1</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>You have given the <b>intersection</b> of the two sets \(A\) and \(B\).
<br>The <b>Cartesian product</b> of two sets is the set of pairs of elements, the first from set \(A\) and the second from set \(B\).</p>

<p>Formally, for two non-empty sets \( A = \{ a_i : 1 \leq i \leq m \} \) and \( B = \{ b_j : 1 \leq j \leq n \} \), the "Cartesian product", \(A \times B\), is the set of all ordered pairs of elements from \(A\) and \(B\).</p>
<p style="margin-left: 30px">\( A \times B = \{ [a_i, b_j] : 1 \leq i \leq m, 1 \leq j \leq n \} \)</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>prod_BA</tans>
        <testoptions/>
        <quiet>1</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>You have given the Cartesian product of the set \(B\) with the set \(A\), which we denote \(B \times A\).
<br>The <b>order</b> in which we take the Cartesian product is important.
<br>\(A \times B\) is the set of pairs of elements, the <b>first</b> from set \(A\) and the <b>second</b> from set \(B\).</p>

<p>Formally, for two non-empty sets \( A = \{ a_i : 1 \leq i \leq m \} \) and \( B = \{ b_j : 1 \leq j \leq n \} \), the "Cartesian product", \(A \times B\), is the set of all ordered pairs of elements from \(A\) and \(B\).</p>
<p style="margin-left: 30px">\( A \times B = \{ [a_i, b_j] : 1 \leq i \leq m, 1 \leq j \leq n \} \)</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>4</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
      <node>
        <name>4</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>node5_test</sans>
        <tans>1</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>5</truenextnode>
        <trueanswernote>prt1-5-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>You have included elements in your answer which are not elements of \(A \times B\).
<br>{@
if cardinality(incorr_entries)=1 then 
    sconcat("Your answer \\(", listify(incorr_entries)[1], "\\) is <b>not</b> an element of \\(A \\times B\\)")
  else
    sconcat("Your answers \\(", incorr_entries_str, "\\) and \\(", last(listify(incorr_entries)),"\\) are <b>not</b> elements of \\(A \\times B\\)")
@}.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>5</falsenextnode>
        <falseanswernote>prt1-5-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>All of the elements that you have included in your answer are correct elements of \(A \times B\).</p>]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>5</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>node6_test</sans>
        <tans>1</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-6-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>There are elements of \(A \times B\) which you have not included in your answer.
<br>{@
if cardinality(missing_entries)=1 then 
    sconcat("The pair \\(", listify(missing_entries)[1], "\\) <b>is</b> an element of \\(A \\times B\\)")
  else
    sconcat("The pairs \\(", missing_entries_str, "\\) and \\(", last(listify(missing_entries)),"\\) <b>are</b> elements of \\(A \\times B\\)")
@}.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-6-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>You have correctly included all of the elements of \(A \times B\) in your answer.</p>]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>/* Node 1 - Checks for correct answer */
/* Node 2 - Finds cardinality of union */
/* Node 3 - Sums cardinalities (when different from cardinality of union) */</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>t_ans2</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text/>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>len_union_CD</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>You have found the cardinality of the <b>union</b> of the sets \(C\) and \(D\).
<br>The <b>Cartesian product</b> of two sets is the set of pairs of elements, the first from set \(C\) and the second from set \(D\).</p>

<p>Formally, for two non-empty sets \( C = \{ c_i : 1 \leq i \leq m \} \) and \( D = \{ d_j : 1 \leq j \leq n \} \), the "Cartesian product", \(A \times B\), is the set of all ordered pairs of elements from \(C\) and \(D\).</p>
<p style="margin-left: 30px">\( C \times D = \{ [c_i, d_j] : 1 \leq i \leq m, 1 \leq j \leq n \} \)</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>2</falsenextnode>
        <falseanswernote>prt2-2-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>sum_len_CD</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-3-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>You have attempted to calculate the cardinality of the Cartesian product of \(C\) and \(D\) by summing the cardinalities of both \(C\) and \(D\).
<br>The correct approach is to take the <b>product</b> of the cardinalities of both \(C\) and \(D\).</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-3-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1121106440</deployedseed>
    <deployedseed>946512448</deployedseed>
    <deployedseed>836695881</deployedseed>
    <deployedseed>1433043831</deployedseed>
    <deployedseed>889860661</deployedseed>
    <deployedseed>1137886831</deployedseed>
    <deployedseed>992328563</deployedseed>
    <deployedseed>1143955164</deployedseed>
    <deployedseed>1236499785</deployedseed>
    <deployedseed>831626416</deployedseed>
    <deployedseed>363579531</deployedseed>
    <deployedseed>1885474518</deployedseed>
    <deployedseed>675766722</deployedseed>
    <deployedseed>251078140</deployedseed>
    <deployedseed>1202972833</deployedseed>
    <deployedseed>1311691156</deployedseed>
    <deployedseed>327178200</deployedseed>
    <deployedseed>837683277</deployedseed>
    <deployedseed>1987389679</deployedseed>
    <deployedseed>569215660</deployedseed>
    <deployedseed>1540747625</deployedseed>
    <deployedseed>890926893</deployedseed>
    <deployedseed>1995109974</deployedseed>
    <deployedseed>1568702179</deployedseed>
    <deployedseed>965881560</deployedseed>
    <deployedseed>386874490</deployedseed>
    <deployedseed>339340114</deployedseed>
    <deployedseed>356566445</deployedseed>
    <deployedseed>2012798442</deployedseed>
    <deployedseed>525843117</deployedseed>
    <deployedseed>1093896174</deployedseed>
    <deployedseed>1533167843</deployedseed>
    <deployedseed>1344904499</deployedseed>
    <deployedseed>961892438</deployedseed>
    <deployedseed>628773775</deployedseed>
    <deployedseed>360497746</deployedseed>
    <deployedseed>1807725613</deployedseed>
    <deployedseed>1587255496</deployedseed>
    <deployedseed>1314891801</deployedseed>
    <deployedseed>1217965268</deployedseed>
    <deployedseed>954760523</deployedseed>
    <deployedseed>2131529671</deployedseed>
    <deployedseed>1806957716</deployedseed>
    <deployedseed>1862489537</deployedseed>
    <deployedseed>906079792</deployedseed>
    <deployedseed>1943113902</deployedseed>
    <deployedseed>622557376</deployedseed>
    <deployedseed>1271889332</deployedseed>
    <deployedseed>1088602328</deployedseed>
    <deployedseed>914111693</deployedseed>
    <deployedseed>1852748642</deployedseed>
    <deployedseed>1509178083</deployedseed>
    <deployedseed>28143819</deployedseed>
    <deployedseed>133401369</deployedseed>
    <deployedseed>478221842</deployedseed>
    <deployedseed>1975881076</deployedseed>
    <deployedseed>46333603</deployedseed>
    <deployedseed>1094175139</deployedseed>
    <deployedseed>1309811564</deployedseed>
    <deployedseed>210140858</deployedseed>
    <deployedseed>1737312544</deployedseed>
    <deployedseed>71172628</deployedseed>
    <deployedseed>1698885996</deployedseed>
    <deployedseed>535151054</deployedseed>
    <deployedseed>65006112</deployedseed>
    <deployedseed>2035797151</deployedseed>
    <deployedseed>1314139766</deployedseed>
    <deployedseed>1786694338</deployedseed>
    <deployedseed>163126106</deployedseed>
    <deployedseed>1408423205</deployedseed>
    <deployedseed>1316686917</deployedseed>
    <deployedseed>792662136</deployedseed>
    <deployedseed>1291918764</deployedseed>
    <deployedseed>1309282109</deployedseed>
    <deployedseed>973183542</deployedseed>
    <deployedseed>200509983</deployedseed>
    <deployedseed>1902088826</deployedseed>
    <deployedseed>1976279765</deployedseed>
    <deployedseed>964384573</deployedseed>
    <deployedseed>1647387997</deployedseed>
    <deployedseed>785783059</deployedseed>
    <deployedseed>1210283168</deployedseed>
    <deployedseed>514147576</deployedseed>
    <deployedseed>720399249</deployedseed>
    <deployedseed>1971047424</deployedseed>
    <deployedseed>1329959935</deployedseed>
    <deployedseed>739921546</deployedseed>
    <deployedseed>327675210</deployedseed>
    <deployedseed>1023849488</deployedseed>
    <deployedseed>1080648075</deployedseed>
    <deployedseed>1751046277</deployedseed>
    <deployedseed>1677295709</deployedseed>
    <deployedseed>2135117003</deployedseed>
    <deployedseed>973485071</deployedseed>
    <deployedseed>1888135828</deployedseed>
    <deployedseed>486185525</deployedseed>
    <deployedseed>1200147279</deployedseed>
    <deployedseed>1223356597</deployedseed>
    <deployedseed>1155853721</deployedseed>
    <deployedseed>740249063</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <description/>
      <testinput>
        <name>ans1</name>
        <value>t_ans1</value>
      </testinput>
      <testinput>
        <name>ans2</name>
        <value>t_ans2</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-1-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt2</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt2-1-T</expectedanswernote>
      </expected>
    </qtest>
  </question>
</quiz>
