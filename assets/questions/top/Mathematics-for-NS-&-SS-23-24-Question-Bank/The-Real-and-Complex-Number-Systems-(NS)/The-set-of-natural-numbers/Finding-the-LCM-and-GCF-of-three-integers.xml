<?xml version="1.0" encoding="UTF-8"?>
<quiz>
  <question type="stack">
    <name>
      <text>Finding the LCM and GCF of three integers</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Consider the three numbers {@num1@}, {@num2@} and {@num3@}.</p>
<p>Find both the greatest common factor (\(\text{GCF}\)) and least common multiple (\(\text{LCM}\)) of the numbers.</p>

<br>

<p>(a) \(\text{GCF}({@num1@}, {@num2@}, {@num3@}) =\) [[input:ans1]] [[validation:ans1]]</p>
<p>[[feedback:prt1]]</p>

<br>

<p>(b) \(\text{LCM}({@num1@}, {@num2@}, {@num3@}) =\) [[input:ans2]] [[validation:ans2]]</p>
<p>[[feedback:prt2]]</p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h3>Worked Solution</h3>
<p>We first express each of the numbers in its prime factorization,</p>

<p style="margin-left:30px">\({@num1@} = {@num1_prime_fact[1][1]@}^{@num1_prime_fact[1][2]@}
[[ foreach x="[1,2,3]" ]]
    {@if length(num1_prime_fact)>x then sconcat("\\hspace{2px}", "\\times ", "\\hspace{2px}") else ""@}
    {@if length(num1_prime_fact)>x then num1_prime_fact[x+1][1] else ""@}
    ^{@if length(num1_prime_fact)>x then num1_prime_fact[x+1][2] else ""@}
[[/ foreach ]]
\)</p>

<p style="margin-left:30px">\({@num2@} = {@num2_prime_fact[1][1]@}^{@num2_prime_fact[1][2]@}
[[ foreach x="[1,2,3]" ]]
    {@if length(num2_prime_fact)>x then sconcat("\\hspace{2px}", "\\times ", "\\hspace{2px}") else ""@}
    {@if length(num2_prime_fact)>x then num2_prime_fact[x+1][1] else ""@}
    ^{@if length(num2_prime_fact)>x then num2_prime_fact[x+1][2] else ""@}
[[/ foreach ]]
\)</p>

<p style="margin-left:30px">\({@num3@} = {@num3_prime_fact[1][1]@}^{@num3_prime_fact[1][2]@}
[[ foreach x="[1,2,3]" ]]
    {@if length(num3_prime_fact)>x then sconcat("\\hspace{2px}", "\\times ", "\\hspace{2px}") else ""@}
    {@if length(num3_prime_fact)>x then num3_prime_fact[x+1][1] else ""@}
    ^{@if length(num3_prime_fact)>x then num3_prime_fact[x+1][2] else ""@}
[[/ foreach ]]
\)</p>

<br>

<p>(a) We can find the \(\text{GCF}\) of the three numbers by taking the <b>smallest</b> power of each prime in the three different prime factorizations. Therefore,</p>
<p style="margin-left:30px">\(\begin{align*}
\text{GCF}({@num1@},{@num2@},{@num2@}) &= {@gcd_prime_fact[1][1]@}^{@gcd_prime_fact[1][2]@}
[[ foreach x="[1,2]" ]]
    {@if length(gcd_prime_fact)>x then sconcat("\\hspace{2px}", "\\times ", "\\hspace{2px}") else ""@}
    {@if length(gcd_prime_fact)>x then gcd_prime_fact[x+1][1] else ""@}
    ^{@if length(gcd_prime_fact)>x then gcd_prime_fact[x+1][2] else ""@}
[[/ foreach ]] \\
&= {@ta1@}
\end{align*}\)

<p>(b) We can find the \(\text{LCM}\) of the three numbers by taking the <b>largest</b> power of each prime in the three different prime factorizations. Therefore,</p>
<p style="margin-left:30px">\(\begin{align*}
\text{LCM}({@num1@},{@num2@},{@num2@}) &= {@lcm_prime_fact[1][1]@}^{@lcm_prime_fact[1][2]@}
[[ foreach x="[1,2,3]" ]]
    {@if length(lcm_prime_fact)>x then sconcat("\\hspace{2px}", "\\times ", "\\hspace{2px}") else ""@}
    {@if length(lcm_prime_fact)>x then lcm_prime_fact[x+1][1] else ""@}
    ^{@if length(lcm_prime_fact)>x then lcm_prime_fact[x+1][2] else ""@}
[[/ foreach ]] \\
&= {@ta2@}
\end{align*}\)]]></text>
    </generalfeedback>
    <defaultgrade>1</defaultgrade>
    <penalty>0.1</penalty>
    <hidden>0</hidden>
    <idnumber/>
    <stackversion>
      <text>2023060500</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[/* ---------- FUNCTIONS */
/* Function to count the number of times a value appears in a list */
how_many(val, lst) := block(
    i:0, 
        for j: 1 step 1 thru length(lst) do (
        if lst[j]=val then i:i+1
    ), 
    return(i)
);

/* Function to return prime factorisation of number */
prime_factorize(num) := block(
    fact_list:[], 
    power_list:[], 
    while num>1 do (
        fact_list:endcons(second(divisors(num)), fact_list), 
        num:num/second(divisors(num))
    ), 
    while length(fact_list)>0 do (
        power_list: endcons([fact_list[1], how_many(fact_list[1], fact_list)], power_list), 
        fact_list:delete(fact_list[1], fact_list)
    ), 
    return(power_list)
);
/* ---------- END FUNCTIONS */

/* fix the gcd */
gcd_fact_list: rand_selection([2,2,3,3,5,7], rand(2)+2);
ta1:product(gcd_fact_list[i], i, 1, length(gcd_fact_list));
gcd_prime_fact: prime_factorize(ta1);

/* generate additional factors for each number */
num1_facts: rand_selection([3,3,3,5,5], rand(2)+1);
num2_facts: rand_selection([2,2,2,5,5], rand(2)+2);
num3_facts: rand_selection([2,2,2,3,3], rand(2)+2);

/* calculate other numbers */
num1: product(num1_facts[i], i, 1, length(num1_facts))*ta1;
num2: product(num2_facts[i], i, 1, length(num2_facts))*ta1;
num3: product(num3_facts[i], i, 1, length(num3_facts))*ta1;

/* determine prime factorizations of numbers */
num1_prime_fact: prime_factorize(num1);
num2_prime_fact: prime_factorize(num2);
num3_prime_fact: prime_factorize(num3);

/* list the numbers are find lcm*/
num_list: [num1, num2, num3];
ta2:apply(lcm, num_list);
lcm_prime_fact: prime_factorize(ta2);]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text/>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text><![CDATA[<p>Find both the (\(\text{GCF}\)) and (\(\text{LCM}\)) of {@num1@}, {@num2@} and {@num3@}.</p>
<p>\(\text{GCF} =\) {@ta1@}</p>
<p>\(\text{LCM} =\) {@ta2@}</p>]]></text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text/>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Correct answer, well done.]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Your answer is partially correct.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Incorrect answer.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>none</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed/>
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>ta1</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint/>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords/>
      <allowwords/>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options/>
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>ta2</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint/>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords/>
      <allowwords/>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options/>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>/* node 2: check if the answer is a common factor */
node2_test: if integerp(ta1/ans1) then 1 else 0;
not_fact_of: sublist(num_list, lambda([x], not(integerp(x/ans1))));</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>ta1</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text/>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>node2_test</sans>
        <tans>1</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>You have found a number which is a common factor of each of the three numbers given.
<br>However, this is not the <b>greatest</b> common factor. There is a common factor that is larger than the one you have given.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>The number you have given is not a common factor of all of the three numbers given.
[[ if test="is(length(not_fact_of)=0)" ]]
    </p>
[[ elif test="is(length(not_fact_of)=1)" ]]
    <br>We can see that {@ans1@} is not a factor of {@not_fact_of[1]@}.</p>
[[ elif test="is(length(not_fact_of)=2)" ]]
    <br>We can see that {@ans1@} is not a factor of {@not_fact_of[1]@} or {@not_fact_of[2]@}.</p>
[[ else ]]
    <br>We can see that {@ans1@} is not a factor of {@not_fact_of[1]@}, {@not_fact_of[2]@} or {@not_fact_of[3]@}.</p>
[[/ if ]]]]></text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>/* node 2: check if the answer is a common factor */
node2_test: if integerp(ans2/ta2) then 1 else 0;
not_fact_of: sublist(num_list, lambda([x], not(integerp(ans2/x))));</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans2</sans>
        <tans>ta2</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text/>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>node2_test</sans>
        <tans>1</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-2-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[<p>You have found a number which is a common multiple of each of the three numbers given.
<br>However, this is not the <b>least</b> common factor. There is a common multiple that is larger than the one you have given.</p>]]></text>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-2-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[<p>The number you have given is not a common multiple of all of the three numbers given.
[[ if test="is(length(not_fact_of)=0)" ]]
    </p>
[[ elif test="is(length(not_fact_of)=1)" ]]
    <br>We can see that {@ans2@} is not a multiple of {@not_fact_of[1]@}.</p>
[[ elif test="is(length(not_fact_of)=2)" ]]
    <br>We can see that {@ans2@} is not a multiple of {@not_fact_of[1]@} or {@not_fact_of[2]@}.</p>
[[ else ]]
    <br>We can see that {@ans2@} is not a multiple of {@not_fact_of[1]@}, {@not_fact_of[2]@} or {@not_fact_of[3]@}.</p>
[[/ if ]]]]></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1073030309</deployedseed>
    <deployedseed>1060555461</deployedseed>
    <deployedseed>1459422154</deployedseed>
    <deployedseed>1439241475</deployedseed>
    <deployedseed>981876915</deployedseed>
    <deployedseed>240444279</deployedseed>
    <deployedseed>2105172873</deployedseed>
    <deployedseed>1521371066</deployedseed>
    <deployedseed>569869108</deployedseed>
    <deployedseed>1813287436</deployedseed>
    <deployedseed>551693355</deployedseed>
    <deployedseed>2067243044</deployedseed>
    <deployedseed>1595219891</deployedseed>
    <deployedseed>1901257861</deployedseed>
    <deployedseed>1510543052</deployedseed>
    <deployedseed>1354698417</deployedseed>
    <deployedseed>644426681</deployedseed>
    <deployedseed>1166367511</deployedseed>
    <deployedseed>24040558</deployedseed>
    <deployedseed>1788057578</deployedseed>
    <deployedseed>1016181787</deployedseed>
    <deployedseed>1568575875</deployedseed>
    <deployedseed>1242492400</deployedseed>
    <deployedseed>313958092</deployedseed>
    <deployedseed>1285781473</deployedseed>
    <deployedseed>385694844</deployedseed>
    <deployedseed>348792271</deployedseed>
    <deployedseed>705210392</deployedseed>
    <deployedseed>379798760</deployedseed>
    <deployedseed>1916969704</deployedseed>
    <deployedseed>615211016</deployedseed>
    <deployedseed>1256720897</deployedseed>
    <deployedseed>1797251650</deployedseed>
    <deployedseed>1055340105</deployedseed>
    <deployedseed>1064354072</deployedseed>
    <deployedseed>173902079</deployedseed>
    <deployedseed>266334172</deployedseed>
    <deployedseed>1282290015</deployedseed>
    <deployedseed>1259080443</deployedseed>
    <deployedseed>763394092</deployedseed>
    <deployedseed>123103030</deployedseed>
    <deployedseed>904851815</deployedseed>
    <deployedseed>1731847437</deployedseed>
    <deployedseed>30927197</deployedseed>
    <deployedseed>176432745</deployedseed>
    <deployedseed>2002910948</deployedseed>
    <deployedseed>862092662</deployedseed>
    <deployedseed>519229422</deployedseed>
    <deployedseed>2109005458</deployedseed>
    <deployedseed>145003548</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <description/>
      <testinput>
        <name>ans1</name>
        <value>ta1</value>
      </testinput>
      <testinput>
        <name>ans2</name>
        <value>ta2</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-1-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt2</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt2-1-T</expectedanswernote>
      </expected>
    </qtest>
  </question>
</quiz>
