<?xml version="1.0" encoding="UTF-8"?>
<quiz>
  <question type="stack">
    <name>
      <text>proving the set of integers using disproving by counterexamples.</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[Prove or disprove the following statement.

<hr>
<b>Statement: </b> For all positive integers \(n\), the expression {@expr(n)@} is divisible by {@divisor@}.

<hr> Can you find a positive integer value for \(n\) such that {@expr(n)@} is divisible by {@divisor@}?
<button id="btn1yes" type="button" style="font-size:16px" onclick="reveal('1');">Yes</button> <button id="btn1no" type="button" style="font-size:16px" onclick="hide('1');">No</button> [[feedback:prtyn1]]
<div id="input1" style="display:none;">[[input:ans_yn1]] [[validation:ans_yn1]]</div>
<br>
<div id="example1" style="display:none;">
    Give one such example: For \(n = \) [[input:ans_n1]] [[validation:ans_n1]], the expression {@expr(n)@} corresponds to the value [[input:ans_expr1]] [[validation:ans_expr1]], which is divisible by {@divisor@}.
    <br> From this we can conclude [[input:ans_select1]] [[feedback:prt1]][[validation:ans_select1]]
</div>

<hr>
<p></p>
Can you find a positive integer value for \(n\) such that {@expr(n)@} is <b>not</b> divisible by {@divisor@}?
<button id="btn2yes" type="button" style="font-size:16px" onclick="reveal('2');">Yes</button> <button id="btn2no" type="button" style="font-size:16px" onclick="hide('2');">No</button> [[feedback:prtyn2]]
<div id="input2" style="display:none;">[[input:ans_yn2]] [[validation:ans_yn2]]</div>
<br>
<div id="example2" style="display:none;">
    Give one such example: For \(n = \) [[input:ans_n2]] [[validation:ans_n2]], the expression {@expr(n)@} corresponds to the value [[input:ans_expr2]] [[validation:ans_expr2]], which is <b>not</b> divisible by {@divisor@}.
    <br> From this we can conclude [[input:ans_select2]] [[feedback:prt2]][[validation:ans_select2]]
</div>

<script>
    function reveal(s) {
        document.querySelector("#input" + s).querySelector("input").value = "true";
        document.querySelector("#example" + s).style.display = "block";
        document.querySelector("#btn" + s + "yes").style["font-size"] = "24px";
        document.querySelector("#btn" + s + "no").style["font-size"] = "16px";
    }

    function hide(s) {
        document.querySelector("#input" + s).querySelector("input").value = "false";
        document.querySelector("#example" + s).style.display = "none";
        document.querySelector("#btn" + s + "yes").style["font-size"] = "16px";
        document.querySelector("#btn" + s + "no").style["font-size"] = "24px";
    }
</script>

<script>
    window.onload = function() {
        for (const s of ['1', '2']) {
            if (document.querySelector("#input" + s).querySelector("input").value == "true") {
                reveal(s);
            } else if (document.querySelector("#input" + s).querySelector("input").value == "false") {
                hide(s)
            }
        }
    };
</script>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text><![CDATA[<h3>Worked solution</h3>
<p>Prove or disprove the following statement.</p>
<p><b>Statement: </b> For all positive integers \(n\), the expression {@expr(n)@} is divisible by {@divisor@}.</p>

<hr>
 Can you find a positive integer value for \(n\) such that {@expr(n)@} is divisible by {@divisor@}? <b>Ans:</b>{@ta_yn1@}
<br> Give one such example: For \(n = {@ta_n1@}\), the expression {@expr(n)@} corresponds to the value \({@ta_expr1@}\), which is divisible by {@divisor@}.
    <br> From this we can conclude {@mcq_correct(ta_select1)[1]@}
<hr>
<p></p>
Can you find a positive integer value for \(n\) such that {@expr(n)@} is <b>not</b> divisible by {@divisor@}? <b>Ans:</b> {@ta_yn2@}
<br>
   Give one such example: For \(n ={@ta_n2@}\), the expression \({@expr(n)@}\) corresponds to the value 
\( {@ta_expr2@} \), which is <b>not</b> divisible by \({@divisor@}\).
  <br> From this we can conclude {@mcq_correct(ta_select2)[1]@}]]></text>
    </generalfeedback>
    <defaultgrade>5</defaultgrade>
    <penalty>0.1</penalty>
    <hidden>0</hidden>
    <idnumber/>
    <stackversion>
      <text>2023060500</text>
    </stackversion>
    <questionvariables>
      <text><![CDATA[/*expr: n*(n+1)*(2n+1);
divisor: 6;*/
expr(n) := 2^n + 4*n^2 + n - 2;
divisor: rand([2,3,5,7]);

ta_yn1: true;
ta_n1: if divisor=2 then 2 else (if divisor=3 then 3 else (if divisor=5 then 1 else 7));
ta_expr1: expr(ta_n1);
ta_select1: [["that the statement is true", false], ["that the statement is false", false], ["nothing about the truth  of the statement", true]]

ta_yn2: true;
ta_n2: if divisor=2 then 1 else (if divisor=3 then 1 else (if divisor=5 then 4 else 6));
ta_expr2: expr(ta_n2);
ta_select2: [["that the statement is true", false], ["that the statement is false", true], ["nothing about the truth  of the statement", false]]
ta1:random_permutation([["Proof by contradiction", false], ["Proof by counter-example", true], ["Proof by induction", false]]);]]></text>
    </questionvariables>
    <specificfeedback format="html">
      <text/>
    </specificfeedback>
    <questionnote format="moodle_auto_format">
      <text><![CDATA[<p> A positive integer value for \(n\) such that {@expr(n)@} is divisible by {@divisor@} <b>Ans:</b>{@ta_yn1@}</p>
<p> For \(n = {@ta_n1@}\), the expression {@expr(n)@} corresponds to the value \({@ta_expr1@}\), which is divisible by {@divisor@}.</p>
  <p> From this we can conclude {@mcq_correct(ta_select1)[1]@} </p>
<p>A positive integer value for \(n\) such that {@expr(n)@} is <b>not</b> divisible by {@divisor@}? <b>Ans:</b> {@ta_yn2@} </p>
<p>\(n ={@ta_n2@}\), the expression \({@expr(n)@}\) corresponds to the value \( {@ta_expr2@} \), which is <b>not</b> divisible by \({@divisor@}\). </p>
 <p> From this we can conclude {@mcq_correct(ta_select2)[1]@}</p>]]></text>
    </questionnote>
    <questiondescription format="moodle_auto_format">
      <text/>
    </questiondescription>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Correct answer, well done.]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i> Your answer is partially correct.</span>]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Incorrect answer.]]></text>
    </prtincorrect>
    <decimals>.</decimals>
    <scientificnotation>*10</scientificnotation>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed/>
    <input>
      <name>ans_expr1</name>
      <type>algebraic</type>
      <tans>ta_expr1</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint/>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords/>
      <allowwords/>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options/>
    </input>
    <input>
      <name>ans_expr2</name>
      <type>algebraic</type>
      <tans>ta_expr2</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint/>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords/>
      <allowwords/>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options/>
    </input>
    <input>
      <name>ans_n1</name>
      <type>algebraic</type>
      <tans>ta_n1</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint/>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords/>
      <allowwords/>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options/>
    </input>
    <input>
      <name>ans_n2</name>
      <type>algebraic</type>
      <tans>ta_n2</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint/>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords/>
      <allowwords/>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options/>
    </input>
    <input>
      <name>ans_select1</name>
      <type>dropdown</type>
      <tans>ta_select1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint/>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords/>
      <allowwords/>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options/>
    </input>
    <input>
      <name>ans_select2</name>
      <type>dropdown</type>
      <tans>ta_select2</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint/>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords/>
      <allowwords/>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options/>
    </input>
    <input>
      <name>ans_yn1</name>
      <type>algebraic</type>
      <tans>ta_yn1</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint/>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords/>
      <allowwords/>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options/>
    </input>
    <input>
      <name>ans_yn2</name>
      <type>algebraic</type>
      <tans>ta_yn2</tans>
      <boxsize>5</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint/>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords/>
      <allowwords/>
      <forbidfloat>1</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>1</mustverify>
      <showvalidation>3</showvalidation>
      <options/>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>/*Node 1: Checks if the first question is correct*/
/*Node 2: Checks if the expression of n corresponds to the value divisible by the given divisor*/
/*Node 3: Checks if the student answer is divisible by the given divisor*/
/*Node 4: Checks for the true statement*/</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans_yn1</sans>
        <tans>ta_yn1</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text/>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>expr(ans_n1)</sans>
        <tans>ans_expr1</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt1-2-T</trueanswernote>
        <truefeedback format="html">
          <text/>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-2-F</falseanswernote>
        <falsefeedback format="html">
          <text>It looks like you made a mistake in your computation: For your value of \(n={@ans_n1@}\), the expression {@expr(n)@} takes the value of {@expr(ans_n1)@}, not {@ans_expr1@}.</text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>mod(ans_expr1, divisor)</sans>
        <tans>0</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.5</truescore>
        <truepenalty/>
        <truenextnode>3</truenextnode>
        <trueanswernote>prt1-3-T</trueanswernote>
        <truefeedback format="html">
          <text/>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-3-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[Your answer {@ans_expr1@} is <b>not</b>divisible by {@divisor@}.]]></text>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans_select1</sans>
        <tans>mcq_correct(ta_select1)[1]</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.5</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-4-T</trueanswernote>
        <truefeedback format="html">
          <text/>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-4-F</falseanswernote>
        <falsefeedback format="html">
          <text>We cannot draw any conclusion from this, because we only found an example value for which the condition holds, but the statement claims that it holds for all positive integers.</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prt2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>/*Node 1: Checks if the first question is correct*/
/*Node 2: Checks if the expression of n corresponds to the value divisible by the given divisor*/
/*Node 3: Checks if the student answer is divisible by the given divisor*/
/*Node 4: Checks for the true statement*/</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans_yn2</sans>
        <tans>ta_yn2</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>1</truenextnode>
        <trueanswernote>prt2-1-T</trueanswernote>
        <truefeedback format="html">
          <text/>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
      <node>
        <name>1</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>expr(ans_n2)</sans>
        <tans>ans_expr2</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>2</truenextnode>
        <trueanswernote>prt2-2-T</trueanswernote>
        <truefeedback format="html">
          <text/>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-2-F</falseanswernote>
        <falsefeedback format="html">
          <text>It looks like you made a mistake in your computation: For your value of \(n={@ans_n2@}\), the expression {@expr(n)@} takes the value of {@expr(ans_n2)@}, not {@ans_expr2@}.</text>
        </falsefeedback>
      </node>
      <node>
        <name>2</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>mod(ans_expr2, divisor)</sans>
        <tans>0</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-3-T</trueanswernote>
        <truefeedback format="html">
          <text>Your answer {@ans_expr2@} is divisible by {@divisor@}.</text>
        </truefeedback>
        <falsescoremode>+</falsescoremode>
        <falsescore>0.5</falsescore>
        <falsepenalty/>
        <falsenextnode>3</falsenextnode>
        <falseanswernote>prt2-3-F</falseanswernote>
        <falsefeedback format="html">
          <text/>
        </falsefeedback>
      </node>
      <node>
        <name>3</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans_select2</sans>
        <tans>mcq_correct(ta_select2)[1]</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>+</truescoremode>
        <truescore>0.5</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt2-4-T</trueanswernote>
        <truefeedback format="html">
          <text/>
        </truefeedback>
        <falsescoremode>-</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt2-4-F</falseanswernote>
        <falsefeedback format="html">
          <text>The statement claims that the condition holds for all positive integers, because we found a counterexample, the statement must be false.</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prtyn1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>/*Node 1: Checks for the correct answer */</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans_yn1</sans>
        <tans>ta_yn1</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prtyn1-1-T</trueanswernote>
        <truefeedback format="html">
          <text/>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prtyn1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>There are in fact positive integers \(n\) for which {@expr(n)@} is divisible by {@divisor@}!</text>
        </falsefeedback>
      </node>
    </prt>
    <prt>
      <name>prtyn2</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>/*Node 1: Checks for the correct answer */</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <description/>
        <answertest>AlgEquiv</answertest>
        <sans>ans_yn2</sans>
        <tans>ta_yn2</tans>
        <testoptions/>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1</truescore>
        <truepenalty/>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prtyn2-1-T</trueanswernote>
        <truefeedback format="html">
          <text/>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0</falsescore>
        <falsepenalty/>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prtyn2-1-F</falseanswernote>
        <falsefeedback format="html">
          <text><![CDATA[There are in fact positive integers \(n\) for which {@expr(n)@} is <b>not</b> divisible by {@divisor@}!]]></text>
        </falsefeedback>
      </node>
    </prt>
    <deployedseed>1976824107</deployedseed>
    <deployedseed>936222609</deployedseed>
    <deployedseed>162918255</deployedseed>
    <deployedseed>1202104186</deployedseed>
    <qtest>
      <testcase>1</testcase>
      <description/>
      <testinput>
        <name>ans_expr1</name>
        <value>ta_expr1</value>
      </testinput>
      <testinput>
        <name>ans_expr2</name>
        <value>ta_expr2</value>
      </testinput>
      <testinput>
        <name>ans_n1</name>
        <value>ta_n1</value>
      </testinput>
      <testinput>
        <name>ans_n2</name>
        <value>ta_n2</value>
      </testinput>
      <testinput>
        <name>ans_select1</name>
        <value>first(mcq_correct(ta_select1))</value>
      </testinput>
      <testinput>
        <name>ans_select2</name>
        <value>first(mcq_correct(ta_select2))</value>
      </testinput>
      <testinput>
        <name>ans_yn1</name>
        <value>ta_yn1</value>
      </testinput>
      <testinput>
        <name>ans_yn2</name>
        <value>ta_yn2</value>
      </testinput>
      <expected>
        <name>prt1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt1-4-T</expectedanswernote>
      </expected>
      <expected>
        <name>prt2</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prt2-4-T</expectedanswernote>
      </expected>
      <expected>
        <name>prtyn1</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prtyn1-1-T</expectedanswernote>
      </expected>
      <expected>
        <name>prtyn2</name>
        <expectedscore>1.0000000</expectedscore>
        <expectedpenalty>0.0000000</expectedpenalty>
        <expectedanswernote>prtyn2-1-T</expectedanswernote>
      </expected>
    </qtest>
  </question>
</quiz>
